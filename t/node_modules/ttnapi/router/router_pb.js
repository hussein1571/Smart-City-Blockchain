/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');

var ttn_api_pb = require('../api_pb.js');
var ttn_protocol_protocol_pb = require('../protocol/protocol_pb.js');
var ttn_gateway_gateway_pb = require('../gateway/gateway_pb.js');
var ttn_trace_trace_pb = require('../trace/trace_pb.js');
goog.exportSymbol('proto.router.DeviceActivationRequest', null, global);
goog.exportSymbol('proto.router.DeviceActivationResponse', null, global);
goog.exportSymbol('proto.router.DownlinkMessage', null, global);
goog.exportSymbol('proto.router.GatewayStatusRequest', null, global);
goog.exportSymbol('proto.router.GatewayStatusResponse', null, global);
goog.exportSymbol('proto.router.Status', null, global);
goog.exportSymbol('proto.router.StatusRequest', null, global);
goog.exportSymbol('proto.router.SubscribeRequest', null, global);
goog.exportSymbol('proto.router.UplinkMessage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.SubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.SubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.SubscribeRequest.displayName = 'proto.router.SubscribeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.SubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.SubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.SubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.SubscribeRequest}
 */
proto.router.SubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.SubscribeRequest;
  return proto.router.SubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.SubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.SubscribeRequest}
 */
proto.router.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.SubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.SubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.SubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.UplinkMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.UplinkMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.UplinkMessage.displayName = 'proto.router.UplinkMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.UplinkMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.router.UplinkMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.UplinkMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.UplinkMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: msg.getPayload_asB64(),
    message: (f = msg.getMessage()) && ttn_protocol_protocol_pb.Message.toObject(includeInstance, f),
    protocolMetadata: (f = msg.getProtocolMetadata()) && ttn_protocol_protocol_pb.RxMetadata.toObject(includeInstance, f),
    gatewayMetadata: (f = msg.getGatewayMetadata()) && ttn_gateway_gateway_pb.RxMetadata.toObject(includeInstance, f),
    trace: (f = msg.getTrace()) && ttn_trace_trace_pb.Trace.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.UplinkMessage}
 */
proto.router.UplinkMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.UplinkMessage;
  return proto.router.UplinkMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.UplinkMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.UplinkMessage}
 */
proto.router.UplinkMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    case 2:
      var value = new ttn_protocol_protocol_pb.Message;
      reader.readMessage(value,ttn_protocol_protocol_pb.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 11:
      var value = new ttn_protocol_protocol_pb.RxMetadata;
      reader.readMessage(value,ttn_protocol_protocol_pb.RxMetadata.deserializeBinaryFromReader);
      msg.setProtocolMetadata(value);
      break;
    case 12:
      var value = new ttn_gateway_gateway_pb.RxMetadata;
      reader.readMessage(value,ttn_gateway_gateway_pb.RxMetadata.deserializeBinaryFromReader);
      msg.setGatewayMetadata(value);
      break;
    case 21:
      var value = new ttn_trace_trace_pb.Trace;
      reader.readMessage(value,ttn_trace_trace_pb.Trace.deserializeBinaryFromReader);
      msg.setTrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.UplinkMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.UplinkMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.UplinkMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.UplinkMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ttn_protocol_protocol_pb.Message.serializeBinaryToWriter
    );
  }
  f = message.getProtocolMetadata();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      ttn_protocol_protocol_pb.RxMetadata.serializeBinaryToWriter
    );
  }
  f = message.getGatewayMetadata();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      ttn_gateway_gateway_pb.RxMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTrace();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      ttn_trace_trace_pb.Trace.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes payload = 1;
 * @return {!(string|Uint8Array)}
 */
proto.router.UplinkMessage.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payload = 1;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.router.UplinkMessage.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.router.UplinkMessage.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.router.UplinkMessage.prototype.setPayload = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional protocol.Message message = 2;
 * @return {?proto.protocol.Message}
 */
proto.router.UplinkMessage.prototype.getMessage = function() {
  return /** @type{?proto.protocol.Message} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.Message, 2));
};


/** @param {?proto.protocol.Message|undefined} value */
proto.router.UplinkMessage.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.router.UplinkMessage.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.UplinkMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional protocol.RxMetadata protocol_metadata = 11;
 * @return {?proto.protocol.RxMetadata}
 */
proto.router.UplinkMessage.prototype.getProtocolMetadata = function() {
  return /** @type{?proto.protocol.RxMetadata} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.RxMetadata, 11));
};


/** @param {?proto.protocol.RxMetadata|undefined} value */
proto.router.UplinkMessage.prototype.setProtocolMetadata = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.router.UplinkMessage.prototype.clearProtocolMetadata = function() {
  this.setProtocolMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.UplinkMessage.prototype.hasProtocolMetadata = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional gateway.RxMetadata gateway_metadata = 12;
 * @return {?proto.gateway.RxMetadata}
 */
proto.router.UplinkMessage.prototype.getGatewayMetadata = function() {
  return /** @type{?proto.gateway.RxMetadata} */ (
    jspb.Message.getWrapperField(this, ttn_gateway_gateway_pb.RxMetadata, 12));
};


/** @param {?proto.gateway.RxMetadata|undefined} value */
proto.router.UplinkMessage.prototype.setGatewayMetadata = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.router.UplinkMessage.prototype.clearGatewayMetadata = function() {
  this.setGatewayMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.UplinkMessage.prototype.hasGatewayMetadata = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional trace.Trace trace = 21;
 * @return {?proto.trace.Trace}
 */
proto.router.UplinkMessage.prototype.getTrace = function() {
  return /** @type{?proto.trace.Trace} */ (
    jspb.Message.getWrapperField(this, ttn_trace_trace_pb.Trace, 21));
};


/** @param {?proto.trace.Trace|undefined} value */
proto.router.UplinkMessage.prototype.setTrace = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.router.UplinkMessage.prototype.clearTrace = function() {
  this.setTrace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.UplinkMessage.prototype.hasTrace = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.DownlinkMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.DownlinkMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.DownlinkMessage.displayName = 'proto.router.DownlinkMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.DownlinkMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.router.DownlinkMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.DownlinkMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.DownlinkMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: msg.getPayload_asB64(),
    message: (f = msg.getMessage()) && ttn_protocol_protocol_pb.Message.toObject(includeInstance, f),
    protocolConfiguration: (f = msg.getProtocolConfiguration()) && ttn_protocol_protocol_pb.TxConfiguration.toObject(includeInstance, f),
    gatewayConfiguration: (f = msg.getGatewayConfiguration()) && ttn_gateway_gateway_pb.TxConfiguration.toObject(includeInstance, f),
    trace: (f = msg.getTrace()) && ttn_trace_trace_pb.Trace.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.DownlinkMessage}
 */
proto.router.DownlinkMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.DownlinkMessage;
  return proto.router.DownlinkMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.DownlinkMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.DownlinkMessage}
 */
proto.router.DownlinkMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    case 2:
      var value = new ttn_protocol_protocol_pb.Message;
      reader.readMessage(value,ttn_protocol_protocol_pb.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 11:
      var value = new ttn_protocol_protocol_pb.TxConfiguration;
      reader.readMessage(value,ttn_protocol_protocol_pb.TxConfiguration.deserializeBinaryFromReader);
      msg.setProtocolConfiguration(value);
      break;
    case 12:
      var value = new ttn_gateway_gateway_pb.TxConfiguration;
      reader.readMessage(value,ttn_gateway_gateway_pb.TxConfiguration.deserializeBinaryFromReader);
      msg.setGatewayConfiguration(value);
      break;
    case 21:
      var value = new ttn_trace_trace_pb.Trace;
      reader.readMessage(value,ttn_trace_trace_pb.Trace.deserializeBinaryFromReader);
      msg.setTrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.DownlinkMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.DownlinkMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.DownlinkMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.DownlinkMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ttn_protocol_protocol_pb.Message.serializeBinaryToWriter
    );
  }
  f = message.getProtocolConfiguration();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      ttn_protocol_protocol_pb.TxConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getGatewayConfiguration();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      ttn_gateway_gateway_pb.TxConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getTrace();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      ttn_trace_trace_pb.Trace.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes payload = 1;
 * @return {!(string|Uint8Array)}
 */
proto.router.DownlinkMessage.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payload = 1;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.router.DownlinkMessage.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.router.DownlinkMessage.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.router.DownlinkMessage.prototype.setPayload = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional protocol.Message message = 2;
 * @return {?proto.protocol.Message}
 */
proto.router.DownlinkMessage.prototype.getMessage = function() {
  return /** @type{?proto.protocol.Message} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.Message, 2));
};


/** @param {?proto.protocol.Message|undefined} value */
proto.router.DownlinkMessage.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.router.DownlinkMessage.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DownlinkMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional protocol.TxConfiguration protocol_configuration = 11;
 * @return {?proto.protocol.TxConfiguration}
 */
proto.router.DownlinkMessage.prototype.getProtocolConfiguration = function() {
  return /** @type{?proto.protocol.TxConfiguration} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.TxConfiguration, 11));
};


/** @param {?proto.protocol.TxConfiguration|undefined} value */
proto.router.DownlinkMessage.prototype.setProtocolConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.router.DownlinkMessage.prototype.clearProtocolConfiguration = function() {
  this.setProtocolConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DownlinkMessage.prototype.hasProtocolConfiguration = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional gateway.TxConfiguration gateway_configuration = 12;
 * @return {?proto.gateway.TxConfiguration}
 */
proto.router.DownlinkMessage.prototype.getGatewayConfiguration = function() {
  return /** @type{?proto.gateway.TxConfiguration} */ (
    jspb.Message.getWrapperField(this, ttn_gateway_gateway_pb.TxConfiguration, 12));
};


/** @param {?proto.gateway.TxConfiguration|undefined} value */
proto.router.DownlinkMessage.prototype.setGatewayConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.router.DownlinkMessage.prototype.clearGatewayConfiguration = function() {
  this.setGatewayConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DownlinkMessage.prototype.hasGatewayConfiguration = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional trace.Trace trace = 21;
 * @return {?proto.trace.Trace}
 */
proto.router.DownlinkMessage.prototype.getTrace = function() {
  return /** @type{?proto.trace.Trace} */ (
    jspb.Message.getWrapperField(this, ttn_trace_trace_pb.Trace, 21));
};


/** @param {?proto.trace.Trace|undefined} value */
proto.router.DownlinkMessage.prototype.setTrace = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.router.DownlinkMessage.prototype.clearTrace = function() {
  this.setTrace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DownlinkMessage.prototype.hasTrace = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.DeviceActivationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.DeviceActivationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.DeviceActivationRequest.displayName = 'proto.router.DeviceActivationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.DeviceActivationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.DeviceActivationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.DeviceActivationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.DeviceActivationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: msg.getPayload_asB64(),
    message: (f = msg.getMessage()) && ttn_protocol_protocol_pb.Message.toObject(includeInstance, f),
    devEui: msg.getDevEui_asB64(),
    appEui: msg.getAppEui_asB64(),
    protocolMetadata: (f = msg.getProtocolMetadata()) && ttn_protocol_protocol_pb.RxMetadata.toObject(includeInstance, f),
    gatewayMetadata: (f = msg.getGatewayMetadata()) && ttn_gateway_gateway_pb.RxMetadata.toObject(includeInstance, f),
    activationMetadata: (f = msg.getActivationMetadata()) && ttn_protocol_protocol_pb.ActivationMetadata.toObject(includeInstance, f),
    trace: (f = msg.getTrace()) && ttn_trace_trace_pb.Trace.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.DeviceActivationRequest}
 */
proto.router.DeviceActivationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.DeviceActivationRequest;
  return proto.router.DeviceActivationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.DeviceActivationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.DeviceActivationRequest}
 */
proto.router.DeviceActivationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    case 2:
      var value = new ttn_protocol_protocol_pb.Message;
      reader.readMessage(value,ttn_protocol_protocol_pb.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDevEui(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppEui(value);
      break;
    case 21:
      var value = new ttn_protocol_protocol_pb.RxMetadata;
      reader.readMessage(value,ttn_protocol_protocol_pb.RxMetadata.deserializeBinaryFromReader);
      msg.setProtocolMetadata(value);
      break;
    case 22:
      var value = new ttn_gateway_gateway_pb.RxMetadata;
      reader.readMessage(value,ttn_gateway_gateway_pb.RxMetadata.deserializeBinaryFromReader);
      msg.setGatewayMetadata(value);
      break;
    case 23:
      var value = new ttn_protocol_protocol_pb.ActivationMetadata;
      reader.readMessage(value,ttn_protocol_protocol_pb.ActivationMetadata.deserializeBinaryFromReader);
      msg.setActivationMetadata(value);
      break;
    case 31:
      var value = new ttn_trace_trace_pb.Trace;
      reader.readMessage(value,ttn_trace_trace_pb.Trace.deserializeBinaryFromReader);
      msg.setTrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.DeviceActivationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.DeviceActivationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.DeviceActivationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.DeviceActivationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ttn_protocol_protocol_pb.Message.serializeBinaryToWriter
    );
  }
  f = message.getDevEui_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getAppEui_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getProtocolMetadata();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      ttn_protocol_protocol_pb.RxMetadata.serializeBinaryToWriter
    );
  }
  f = message.getGatewayMetadata();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      ttn_gateway_gateway_pb.RxMetadata.serializeBinaryToWriter
    );
  }
  f = message.getActivationMetadata();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      ttn_protocol_protocol_pb.ActivationMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTrace();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      ttn_trace_trace_pb.Trace.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes payload = 1;
 * @return {!(string|Uint8Array)}
 */
proto.router.DeviceActivationRequest.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payload = 1;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.router.DeviceActivationRequest.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.router.DeviceActivationRequest.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.router.DeviceActivationRequest.prototype.setPayload = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional protocol.Message message = 2;
 * @return {?proto.protocol.Message}
 */
proto.router.DeviceActivationRequest.prototype.getMessage = function() {
  return /** @type{?proto.protocol.Message} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.Message, 2));
};


/** @param {?proto.protocol.Message|undefined} value */
proto.router.DeviceActivationRequest.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.router.DeviceActivationRequest.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DeviceActivationRequest.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes dev_eui = 11;
 * @return {!(string|Uint8Array)}
 */
proto.router.DeviceActivationRequest.prototype.getDevEui = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes dev_eui = 11;
 * This is a type-conversion wrapper around `getDevEui()`
 * @return {string}
 */
proto.router.DeviceActivationRequest.prototype.getDevEui_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDevEui()));
};


/**
 * optional bytes dev_eui = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDevEui()`
 * @return {!Uint8Array}
 */
proto.router.DeviceActivationRequest.prototype.getDevEui_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDevEui()));
};


/** @param {!(string|Uint8Array)} value */
proto.router.DeviceActivationRequest.prototype.setDevEui = function(value) {
  jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional bytes app_eui = 12;
 * @return {!(string|Uint8Array)}
 */
proto.router.DeviceActivationRequest.prototype.getAppEui = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes app_eui = 12;
 * This is a type-conversion wrapper around `getAppEui()`
 * @return {string}
 */
proto.router.DeviceActivationRequest.prototype.getAppEui_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppEui()));
};


/**
 * optional bytes app_eui = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppEui()`
 * @return {!Uint8Array}
 */
proto.router.DeviceActivationRequest.prototype.getAppEui_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppEui()));
};


/** @param {!(string|Uint8Array)} value */
proto.router.DeviceActivationRequest.prototype.setAppEui = function(value) {
  jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional protocol.RxMetadata protocol_metadata = 21;
 * @return {?proto.protocol.RxMetadata}
 */
proto.router.DeviceActivationRequest.prototype.getProtocolMetadata = function() {
  return /** @type{?proto.protocol.RxMetadata} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.RxMetadata, 21));
};


/** @param {?proto.protocol.RxMetadata|undefined} value */
proto.router.DeviceActivationRequest.prototype.setProtocolMetadata = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.router.DeviceActivationRequest.prototype.clearProtocolMetadata = function() {
  this.setProtocolMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DeviceActivationRequest.prototype.hasProtocolMetadata = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional gateway.RxMetadata gateway_metadata = 22;
 * @return {?proto.gateway.RxMetadata}
 */
proto.router.DeviceActivationRequest.prototype.getGatewayMetadata = function() {
  return /** @type{?proto.gateway.RxMetadata} */ (
    jspb.Message.getWrapperField(this, ttn_gateway_gateway_pb.RxMetadata, 22));
};


/** @param {?proto.gateway.RxMetadata|undefined} value */
proto.router.DeviceActivationRequest.prototype.setGatewayMetadata = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.router.DeviceActivationRequest.prototype.clearGatewayMetadata = function() {
  this.setGatewayMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DeviceActivationRequest.prototype.hasGatewayMetadata = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional protocol.ActivationMetadata activation_metadata = 23;
 * @return {?proto.protocol.ActivationMetadata}
 */
proto.router.DeviceActivationRequest.prototype.getActivationMetadata = function() {
  return /** @type{?proto.protocol.ActivationMetadata} */ (
    jspb.Message.getWrapperField(this, ttn_protocol_protocol_pb.ActivationMetadata, 23));
};


/** @param {?proto.protocol.ActivationMetadata|undefined} value */
proto.router.DeviceActivationRequest.prototype.setActivationMetadata = function(value) {
  jspb.Message.setWrapperField(this, 23, value);
};


proto.router.DeviceActivationRequest.prototype.clearActivationMetadata = function() {
  this.setActivationMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DeviceActivationRequest.prototype.hasActivationMetadata = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional trace.Trace trace = 31;
 * @return {?proto.trace.Trace}
 */
proto.router.DeviceActivationRequest.prototype.getTrace = function() {
  return /** @type{?proto.trace.Trace} */ (
    jspb.Message.getWrapperField(this, ttn_trace_trace_pb.Trace, 31));
};


/** @param {?proto.trace.Trace|undefined} value */
proto.router.DeviceActivationRequest.prototype.setTrace = function(value) {
  jspb.Message.setWrapperField(this, 31, value);
};


proto.router.DeviceActivationRequest.prototype.clearTrace = function() {
  this.setTrace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.DeviceActivationRequest.prototype.hasTrace = function() {
  return jspb.Message.getField(this, 31) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.DeviceActivationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.DeviceActivationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.DeviceActivationResponse.displayName = 'proto.router.DeviceActivationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.DeviceActivationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.router.DeviceActivationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.DeviceActivationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.DeviceActivationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.DeviceActivationResponse}
 */
proto.router.DeviceActivationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.DeviceActivationResponse;
  return proto.router.DeviceActivationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.DeviceActivationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.DeviceActivationResponse}
 */
proto.router.DeviceActivationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.DeviceActivationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.DeviceActivationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.DeviceActivationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.DeviceActivationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.GatewayStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.GatewayStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.GatewayStatusRequest.displayName = 'proto.router.GatewayStatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.GatewayStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.GatewayStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.GatewayStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.GatewayStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.GatewayStatusRequest}
 */
proto.router.GatewayStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.GatewayStatusRequest;
  return proto.router.GatewayStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.GatewayStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.GatewayStatusRequest}
 */
proto.router.GatewayStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.GatewayStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.GatewayStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.GatewayStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.GatewayStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string gateway_id = 1;
 * @return {string}
 */
proto.router.GatewayStatusRequest.prototype.getGatewayId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.router.GatewayStatusRequest.prototype.setGatewayId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.GatewayStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.GatewayStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.GatewayStatusResponse.displayName = 'proto.router.GatewayStatusResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.GatewayStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.router.GatewayStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.GatewayStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.GatewayStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastSeen: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: (f = msg.getStatus()) && ttn_gateway_gateway_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.GatewayStatusResponse}
 */
proto.router.GatewayStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.GatewayStatusResponse;
  return proto.router.GatewayStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.GatewayStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.GatewayStatusResponse}
 */
proto.router.GatewayStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastSeen(value);
      break;
    case 2:
      var value = new ttn_gateway_gateway_pb.Status;
      reader.readMessage(value,ttn_gateway_gateway_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.GatewayStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.GatewayStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.GatewayStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.GatewayStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastSeen();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ttn_gateway_gateway_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 last_seen = 1;
 * @return {number}
 */
proto.router.GatewayStatusResponse.prototype.getLastSeen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.router.GatewayStatusResponse.prototype.setLastSeen = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional gateway.Status status = 2;
 * @return {?proto.gateway.Status}
 */
proto.router.GatewayStatusResponse.prototype.getStatus = function() {
  return /** @type{?proto.gateway.Status} */ (
    jspb.Message.getWrapperField(this, ttn_gateway_gateway_pb.Status, 2));
};


/** @param {?proto.gateway.Status|undefined} value */
proto.router.GatewayStatusResponse.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.router.GatewayStatusResponse.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.GatewayStatusResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.StatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.StatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.StatusRequest.displayName = 'proto.router.StatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.StatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.router.StatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.StatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.StatusRequest}
 */
proto.router.StatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.StatusRequest;
  return proto.router.StatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.StatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.StatusRequest}
 */
proto.router.StatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.StatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.StatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.StatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.StatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.router.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.router.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.router.Status.displayName = 'proto.router.Status';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.router.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.router.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.router.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    system: (f = msg.getSystem()) && ttn_api_pb.SystemStats.toObject(includeInstance, f),
    component: (f = msg.getComponent()) && ttn_api_pb.ComponentStats.toObject(includeInstance, f),
    gatewayStatus: (f = msg.getGatewayStatus()) && ttn_api_pb.Rates.toObject(includeInstance, f),
    uplink: (f = msg.getUplink()) && ttn_api_pb.Rates.toObject(includeInstance, f),
    downlink: (f = msg.getDownlink()) && ttn_api_pb.Rates.toObject(includeInstance, f),
    activations: (f = msg.getActivations()) && ttn_api_pb.Rates.toObject(includeInstance, f),
    connectedGateways: jspb.Message.getFieldWithDefault(msg, 21, 0),
    connectedBrokers: jspb.Message.getFieldWithDefault(msg, 22, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.router.Status}
 */
proto.router.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.router.Status;
  return proto.router.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.router.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.router.Status}
 */
proto.router.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ttn_api_pb.SystemStats;
      reader.readMessage(value,ttn_api_pb.SystemStats.deserializeBinaryFromReader);
      msg.setSystem(value);
      break;
    case 2:
      var value = new ttn_api_pb.ComponentStats;
      reader.readMessage(value,ttn_api_pb.ComponentStats.deserializeBinaryFromReader);
      msg.setComponent(value);
      break;
    case 11:
      var value = new ttn_api_pb.Rates;
      reader.readMessage(value,ttn_api_pb.Rates.deserializeBinaryFromReader);
      msg.setGatewayStatus(value);
      break;
    case 12:
      var value = new ttn_api_pb.Rates;
      reader.readMessage(value,ttn_api_pb.Rates.deserializeBinaryFromReader);
      msg.setUplink(value);
      break;
    case 13:
      var value = new ttn_api_pb.Rates;
      reader.readMessage(value,ttn_api_pb.Rates.deserializeBinaryFromReader);
      msg.setDownlink(value);
      break;
    case 14:
      var value = new ttn_api_pb.Rates;
      reader.readMessage(value,ttn_api_pb.Rates.deserializeBinaryFromReader);
      msg.setActivations(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConnectedGateways(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConnectedBrokers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.router.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.router.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.router.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.router.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ttn_api_pb.SystemStats.serializeBinaryToWriter
    );
  }
  f = message.getComponent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ttn_api_pb.ComponentStats.serializeBinaryToWriter
    );
  }
  f = message.getGatewayStatus();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      ttn_api_pb.Rates.serializeBinaryToWriter
    );
  }
  f = message.getUplink();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      ttn_api_pb.Rates.serializeBinaryToWriter
    );
  }
  f = message.getDownlink();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      ttn_api_pb.Rates.serializeBinaryToWriter
    );
  }
  f = message.getActivations();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      ttn_api_pb.Rates.serializeBinaryToWriter
    );
  }
  f = message.getConnectedGateways();
  if (f !== 0) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = message.getConnectedBrokers();
  if (f !== 0) {
    writer.writeUint32(
      22,
      f
    );
  }
};


/**
 * optional api.SystemStats system = 1;
 * @return {?proto.api.SystemStats}
 */
proto.router.Status.prototype.getSystem = function() {
  return /** @type{?proto.api.SystemStats} */ (
    jspb.Message.getWrapperField(this, ttn_api_pb.SystemStats, 1));
};


/** @param {?proto.api.SystemStats|undefined} value */
proto.router.Status.prototype.setSystem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.router.Status.prototype.clearSystem = function() {
  this.setSystem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.Status.prototype.hasSystem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional api.ComponentStats component = 2;
 * @return {?proto.api.ComponentStats}
 */
proto.router.Status.prototype.getComponent = function() {
  return /** @type{?proto.api.ComponentStats} */ (
    jspb.Message.getWrapperField(this, ttn_api_pb.ComponentStats, 2));
};


/** @param {?proto.api.ComponentStats|undefined} value */
proto.router.Status.prototype.setComponent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.router.Status.prototype.clearComponent = function() {
  this.setComponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.Status.prototype.hasComponent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional api.Rates gateway_status = 11;
 * @return {?proto.api.Rates}
 */
proto.router.Status.prototype.getGatewayStatus = function() {
  return /** @type{?proto.api.Rates} */ (
    jspb.Message.getWrapperField(this, ttn_api_pb.Rates, 11));
};


/** @param {?proto.api.Rates|undefined} value */
proto.router.Status.prototype.setGatewayStatus = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.router.Status.prototype.clearGatewayStatus = function() {
  this.setGatewayStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.Status.prototype.hasGatewayStatus = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional api.Rates uplink = 12;
 * @return {?proto.api.Rates}
 */
proto.router.Status.prototype.getUplink = function() {
  return /** @type{?proto.api.Rates} */ (
    jspb.Message.getWrapperField(this, ttn_api_pb.Rates, 12));
};


/** @param {?proto.api.Rates|undefined} value */
proto.router.Status.prototype.setUplink = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.router.Status.prototype.clearUplink = function() {
  this.setUplink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.Status.prototype.hasUplink = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional api.Rates downlink = 13;
 * @return {?proto.api.Rates}
 */
proto.router.Status.prototype.getDownlink = function() {
  return /** @type{?proto.api.Rates} */ (
    jspb.Message.getWrapperField(this, ttn_api_pb.Rates, 13));
};


/** @param {?proto.api.Rates|undefined} value */
proto.router.Status.prototype.setDownlink = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.router.Status.prototype.clearDownlink = function() {
  this.setDownlink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.Status.prototype.hasDownlink = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional api.Rates activations = 14;
 * @return {?proto.api.Rates}
 */
proto.router.Status.prototype.getActivations = function() {
  return /** @type{?proto.api.Rates} */ (
    jspb.Message.getWrapperField(this, ttn_api_pb.Rates, 14));
};


/** @param {?proto.api.Rates|undefined} value */
proto.router.Status.prototype.setActivations = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.router.Status.prototype.clearActivations = function() {
  this.setActivations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.router.Status.prototype.hasActivations = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 connected_gateways = 21;
 * @return {number}
 */
proto.router.Status.prototype.getConnectedGateways = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.router.Status.prototype.setConnectedGateways = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional uint32 connected_brokers = 22;
 * @return {number}
 */
proto.router.Status.prototype.getConnectedBrokers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.router.Status.prototype.setConnectedBrokers = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


goog.object.extend(exports, proto.router);
