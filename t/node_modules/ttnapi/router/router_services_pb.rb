# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: github.com/TheThingsNetwork/api/router/router.proto for package 'router'
# Original file comments:
# Copyright Â© 2017 The Things Network
# Use of this source code is governed by the MIT license that can be found in the LICENSE file.
#

require 'grpc'
require 'router/router_pb'

module Router
  module Router
    # The Router service provides pure network functionality
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'router.Router'

      # Gateway streams status messages to Router
      rpc :GatewayStatus, stream(Gateway::Status), Google::Protobuf::Empty
      # Gateway streams uplink messages to Router
      rpc :Uplink, stream(UplinkMessage), Google::Protobuf::Empty
      # Gateway subscribes to downlink messages from Router
      # It is possible to open multiple subscriptions (but not recommended).
      # If you do this, you are responsible for de-duplication of downlink messages.
      rpc :Subscribe, SubscribeRequest, stream(DownlinkMessage)
      # Gateway requests device activation
      rpc :Activate, DeviceActivationRequest, DeviceActivationResponse
    end

    Stub = Service.rpc_stub_class
  end
  module RouterManager
    # The RouterManager service provides configuration and monitoring functionality
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'router.RouterManager'

      # Gateway owner or network operator requests Gateway status from Router Manager
      # Deprecated: Use monitor API (NOC) instead of this
      rpc :GatewayStatus, GatewayStatusRequest, GatewayStatusResponse
      # Network operator requests Router status
      rpc :GetStatus, StatusRequest, Status
    end

    Stub = Service.rpc_stub_class
  end
end
