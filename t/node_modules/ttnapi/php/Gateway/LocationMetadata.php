<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: github.com/TheThingsNetwork/api/gateway/gateway.proto

namespace Gateway;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gateway.LocationMetadata</code>
 */
class LocationMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Time (unix nanoseconds)
     *
     * Generated from protobuf field <code>int64 time = 1;</code>
     */
    private $time = 0;
    /**
     * the north–south position (degrees; -90 to +90), where 0 is the equator, north pole is positive, south pole is negative
     *
     * Generated from protobuf field <code>float latitude = 2;</code>
     */
    private $latitude = 0.0;
    /**
     * the east-west position (degrees; -180 to +180), where 0 is the Prime Meridian (Greenwich), east is positive , west is negative
     *
     * Generated from protobuf field <code>float longitude = 3;</code>
     */
    private $longitude = 0.0;
    /**
     * the altitude (meters), where 0 is the mean sea level
     *
     * Generated from protobuf field <code>int32 altitude = 4;</code>
     */
    private $altitude = 0;
    /**
     * the accuracy of the location (meters)
     *
     * Generated from protobuf field <code>int32 accuracy = 5;</code>
     */
    private $accuracy = 0;
    /**
     * Generated from protobuf field <code>.gateway.LocationMetadata.LocationSource source = 6;</code>
     */
    private $source = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $time
     *           Time (unix nanoseconds)
     *     @type float $latitude
     *           the north–south position (degrees; -90 to +90), where 0 is the equator, north pole is positive, south pole is negative
     *     @type float $longitude
     *           the east-west position (degrees; -180 to +180), where 0 is the Prime Meridian (Greenwich), east is positive , west is negative
     *     @type int $altitude
     *           the altitude (meters), where 0 is the mean sea level
     *     @type int $accuracy
     *           the accuracy of the location (meters)
     *     @type int $source
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GithubCom\TheThingsNetwork\Api\Gateway\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * Time (unix nanoseconds)
     *
     * Generated from protobuf field <code>int64 time = 1;</code>
     * @return int|string
     */
    public function getTime()
    {
        return $this->time;
    }

    /**
     * Time (unix nanoseconds)
     *
     * Generated from protobuf field <code>int64 time = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->time = $var;

        return $this;
    }

    /**
     * the north–south position (degrees; -90 to +90), where 0 is the equator, north pole is positive, south pole is negative
     *
     * Generated from protobuf field <code>float latitude = 2;</code>
     * @return float
     */
    public function getLatitude()
    {
        return $this->latitude;
    }

    /**
     * the north–south position (degrees; -90 to +90), where 0 is the equator, north pole is positive, south pole is negative
     *
     * Generated from protobuf field <code>float latitude = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setLatitude($var)
    {
        GPBUtil::checkFloat($var);
        $this->latitude = $var;

        return $this;
    }

    /**
     * the east-west position (degrees; -180 to +180), where 0 is the Prime Meridian (Greenwich), east is positive , west is negative
     *
     * Generated from protobuf field <code>float longitude = 3;</code>
     * @return float
     */
    public function getLongitude()
    {
        return $this->longitude;
    }

    /**
     * the east-west position (degrees; -180 to +180), where 0 is the Prime Meridian (Greenwich), east is positive , west is negative
     *
     * Generated from protobuf field <code>float longitude = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setLongitude($var)
    {
        GPBUtil::checkFloat($var);
        $this->longitude = $var;

        return $this;
    }

    /**
     * the altitude (meters), where 0 is the mean sea level
     *
     * Generated from protobuf field <code>int32 altitude = 4;</code>
     * @return int
     */
    public function getAltitude()
    {
        return $this->altitude;
    }

    /**
     * the altitude (meters), where 0 is the mean sea level
     *
     * Generated from protobuf field <code>int32 altitude = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setAltitude($var)
    {
        GPBUtil::checkInt32($var);
        $this->altitude = $var;

        return $this;
    }

    /**
     * the accuracy of the location (meters)
     *
     * Generated from protobuf field <code>int32 accuracy = 5;</code>
     * @return int
     */
    public function getAccuracy()
    {
        return $this->accuracy;
    }

    /**
     * the accuracy of the location (meters)
     *
     * Generated from protobuf field <code>int32 accuracy = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setAccuracy($var)
    {
        GPBUtil::checkInt32($var);
        $this->accuracy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gateway.LocationMetadata.LocationSource source = 6;</code>
     * @return int
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Generated from protobuf field <code>.gateway.LocationMetadata.LocationSource source = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkEnum($var, \Gateway\LocationMetadata_LocationSource::class);
        $this->source = $var;

        return $this;
    }

}

