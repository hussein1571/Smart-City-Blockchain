/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/api/monitor/monitor.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fapi_2fmonitor_2fmonitor_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fapi_2fmonitor_2fmonitor_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"
#include "github.com/TheThingsNetwork/api/gateway/gateway.pb-c.h"
#include "github.com/TheThingsNetwork/api/router/router.pb-c.h"
#include "github.com/TheThingsNetwork/api/broker/broker.pb-c.h"
#include "github.com/TheThingsNetwork/api/handler/handler.pb-c.h"
#include "github.com/TheThingsNetwork/api/networkserver/networkserver.pb-c.h"



/* --- enums --- */


/* --- messages --- */

/* --- per-message closures --- */


/* --- services --- */

typedef struct _Monitor__Monitor_Service Monitor__Monitor_Service;
struct _Monitor__Monitor_Service
{
  ProtobufCService base;
  void (*router_status)(Monitor__Monitor_Service *service,
                        const Router__Status *input,
                        Google__Protobuf__Empty_Closure closure,
                        void *closure_data);
  void (*gateway_status)(Monitor__Monitor_Service *service,
                         const Gateway__Status *input,
                         Google__Protobuf__Empty_Closure closure,
                         void *closure_data);
  void (*gateway_uplink)(Monitor__Monitor_Service *service,
                         const Router__UplinkMessage *input,
                         Google__Protobuf__Empty_Closure closure,
                         void *closure_data);
  void (*gateway_downlink)(Monitor__Monitor_Service *service,
                           const Router__DownlinkMessage *input,
                           Google__Protobuf__Empty_Closure closure,
                           void *closure_data);
  void (*broker_status)(Monitor__Monitor_Service *service,
                        const Broker__Status *input,
                        Google__Protobuf__Empty_Closure closure,
                        void *closure_data);
  void (*broker_uplink)(Monitor__Monitor_Service *service,
                        const Broker__DeduplicatedUplinkMessage *input,
                        Google__Protobuf__Empty_Closure closure,
                        void *closure_data);
  void (*broker_downlink)(Monitor__Monitor_Service *service,
                          const Broker__DownlinkMessage *input,
                          Google__Protobuf__Empty_Closure closure,
                          void *closure_data);
  void (*handler_status)(Monitor__Monitor_Service *service,
                         const Handler__Status *input,
                         Google__Protobuf__Empty_Closure closure,
                         void *closure_data);
  void (*handler_uplink)(Monitor__Monitor_Service *service,
                         const Broker__DeduplicatedUplinkMessage *input,
                         Google__Protobuf__Empty_Closure closure,
                         void *closure_data);
  void (*handler_downlink)(Monitor__Monitor_Service *service,
                           const Broker__DownlinkMessage *input,
                           Google__Protobuf__Empty_Closure closure,
                           void *closure_data);
  void (*network_server_status)(Monitor__Monitor_Service *service,
                                const Networkserver__Status *input,
                                Google__Protobuf__Empty_Closure closure,
                                void *closure_data);
};
typedef void (*Monitor__Monitor_ServiceDestroy)(Monitor__Monitor_Service *);
void monitor__monitor__init (Monitor__Monitor_Service *service,
                             Monitor__Monitor_ServiceDestroy destroy);
#define MONITOR__MONITOR__BASE_INIT \
    { &monitor__monitor__descriptor, protobuf_c_service_invoke_internal, NULL }
#define MONITOR__MONITOR__INIT(function_prefix__) \
    { MONITOR__MONITOR__BASE_INIT,\
      function_prefix__ ## router_status,\
      function_prefix__ ## gateway_status,\
      function_prefix__ ## gateway_uplink,\
      function_prefix__ ## gateway_downlink,\
      function_prefix__ ## broker_status,\
      function_prefix__ ## broker_uplink,\
      function_prefix__ ## broker_downlink,\
      function_prefix__ ## handler_status,\
      function_prefix__ ## handler_uplink,\
      function_prefix__ ## handler_downlink,\
      function_prefix__ ## network_server_status  }
void monitor__monitor__router_status(ProtobufCService *service,
                                     const Router__Status *input,
                                     Google__Protobuf__Empty_Closure closure,
                                     void *closure_data);
void monitor__monitor__gateway_status(ProtobufCService *service,
                                      const Gateway__Status *input,
                                      Google__Protobuf__Empty_Closure closure,
                                      void *closure_data);
void monitor__monitor__gateway_uplink(ProtobufCService *service,
                                      const Router__UplinkMessage *input,
                                      Google__Protobuf__Empty_Closure closure,
                                      void *closure_data);
void monitor__monitor__gateway_downlink(ProtobufCService *service,
                                        const Router__DownlinkMessage *input,
                                        Google__Protobuf__Empty_Closure closure,
                                        void *closure_data);
void monitor__monitor__broker_status(ProtobufCService *service,
                                     const Broker__Status *input,
                                     Google__Protobuf__Empty_Closure closure,
                                     void *closure_data);
void monitor__monitor__broker_uplink(ProtobufCService *service,
                                     const Broker__DeduplicatedUplinkMessage *input,
                                     Google__Protobuf__Empty_Closure closure,
                                     void *closure_data);
void monitor__monitor__broker_downlink(ProtobufCService *service,
                                       const Broker__DownlinkMessage *input,
                                       Google__Protobuf__Empty_Closure closure,
                                       void *closure_data);
void monitor__monitor__handler_status(ProtobufCService *service,
                                      const Handler__Status *input,
                                      Google__Protobuf__Empty_Closure closure,
                                      void *closure_data);
void monitor__monitor__handler_uplink(ProtobufCService *service,
                                      const Broker__DeduplicatedUplinkMessage *input,
                                      Google__Protobuf__Empty_Closure closure,
                                      void *closure_data);
void monitor__monitor__handler_downlink(ProtobufCService *service,
                                        const Broker__DownlinkMessage *input,
                                        Google__Protobuf__Empty_Closure closure,
                                        void *closure_data);
void monitor__monitor__network_server_status(ProtobufCService *service,
                                             const Networkserver__Status *input,
                                             Google__Protobuf__Empty_Closure closure,
                                             void *closure_data);

/* --- descriptors --- */

extern const ProtobufCServiceDescriptor monitor__monitor__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fapi_2fmonitor_2fmonitor_2eproto__INCLUDED */
