/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/api/protocol/lorawan/device_address.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fapi_2fprotocol_2florawan_2fdevice_5faddress_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fapi_2fprotocol_2florawan_2fdevice_5faddress_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "github.com/gogo/protobuf/gogoproto/gogo.pb-c.h"

typedef struct _Lorawan__PrefixesRequest Lorawan__PrefixesRequest;
typedef struct _Lorawan__PrefixesResponse Lorawan__PrefixesResponse;
typedef struct _Lorawan__PrefixesResponse__PrefixMapping Lorawan__PrefixesResponse__PrefixMapping;
typedef struct _Lorawan__DevAddrRequest Lorawan__DevAddrRequest;
typedef struct _Lorawan__DevAddrResponse Lorawan__DevAddrResponse;


/* --- enums --- */


/* --- messages --- */

struct  _Lorawan__PrefixesRequest
{
  ProtobufCMessage base;
};
#define LORAWAN__PREFIXES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__prefixes_request__descriptor) \
     }


struct  _Lorawan__PrefixesResponse__PrefixMapping
{
  ProtobufCMessage base;
  /*
   * The prefix that can be used
   */
  char *prefix;
  /*
   * Usage constraints of this prefix (see activation_constraints in device.proto)
   */
  size_t n_usage;
  char **usage;
};
#define LORAWAN__PREFIXES_RESPONSE__PREFIX_MAPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__prefixes_response__prefix_mapping__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _Lorawan__PrefixesResponse
{
  ProtobufCMessage base;
  /*
   * The prefixes that are in use or available
   */
  size_t n_prefixes;
  Lorawan__PrefixesResponse__PrefixMapping **prefixes;
};
#define LORAWAN__PREFIXES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__prefixes_response__descriptor) \
    , 0,NULL }


struct  _Lorawan__DevAddrRequest
{
  ProtobufCMessage base;
  /*
   * The usage constraints (see activation_constraints in device.proto)
   */
  size_t n_usage;
  char **usage;
};
#define LORAWAN__DEV_ADDR_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__dev_addr_request__descriptor) \
    , 0,NULL }


struct  _Lorawan__DevAddrResponse
{
  ProtobufCMessage base;
  ProtobufCBinaryData dev_addr;
};
#define LORAWAN__DEV_ADDR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__dev_addr_response__descriptor) \
    , {0,NULL} }


/* Lorawan__PrefixesRequest methods */
void   lorawan__prefixes_request__init
                     (Lorawan__PrefixesRequest         *message);
size_t lorawan__prefixes_request__get_packed_size
                     (const Lorawan__PrefixesRequest   *message);
size_t lorawan__prefixes_request__pack
                     (const Lorawan__PrefixesRequest   *message,
                      uint8_t             *out);
size_t lorawan__prefixes_request__pack_to_buffer
                     (const Lorawan__PrefixesRequest   *message,
                      ProtobufCBuffer     *buffer);
Lorawan__PrefixesRequest *
       lorawan__prefixes_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lorawan__prefixes_request__free_unpacked
                     (Lorawan__PrefixesRequest *message,
                      ProtobufCAllocator *allocator);
/* Lorawan__PrefixesResponse__PrefixMapping methods */
void   lorawan__prefixes_response__prefix_mapping__init
                     (Lorawan__PrefixesResponse__PrefixMapping         *message);
/* Lorawan__PrefixesResponse methods */
void   lorawan__prefixes_response__init
                     (Lorawan__PrefixesResponse         *message);
size_t lorawan__prefixes_response__get_packed_size
                     (const Lorawan__PrefixesResponse   *message);
size_t lorawan__prefixes_response__pack
                     (const Lorawan__PrefixesResponse   *message,
                      uint8_t             *out);
size_t lorawan__prefixes_response__pack_to_buffer
                     (const Lorawan__PrefixesResponse   *message,
                      ProtobufCBuffer     *buffer);
Lorawan__PrefixesResponse *
       lorawan__prefixes_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lorawan__prefixes_response__free_unpacked
                     (Lorawan__PrefixesResponse *message,
                      ProtobufCAllocator *allocator);
/* Lorawan__DevAddrRequest methods */
void   lorawan__dev_addr_request__init
                     (Lorawan__DevAddrRequest         *message);
size_t lorawan__dev_addr_request__get_packed_size
                     (const Lorawan__DevAddrRequest   *message);
size_t lorawan__dev_addr_request__pack
                     (const Lorawan__DevAddrRequest   *message,
                      uint8_t             *out);
size_t lorawan__dev_addr_request__pack_to_buffer
                     (const Lorawan__DevAddrRequest   *message,
                      ProtobufCBuffer     *buffer);
Lorawan__DevAddrRequest *
       lorawan__dev_addr_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lorawan__dev_addr_request__free_unpacked
                     (Lorawan__DevAddrRequest *message,
                      ProtobufCAllocator *allocator);
/* Lorawan__DevAddrResponse methods */
void   lorawan__dev_addr_response__init
                     (Lorawan__DevAddrResponse         *message);
size_t lorawan__dev_addr_response__get_packed_size
                     (const Lorawan__DevAddrResponse   *message);
size_t lorawan__dev_addr_response__pack
                     (const Lorawan__DevAddrResponse   *message,
                      uint8_t             *out);
size_t lorawan__dev_addr_response__pack_to_buffer
                     (const Lorawan__DevAddrResponse   *message,
                      ProtobufCBuffer     *buffer);
Lorawan__DevAddrResponse *
       lorawan__dev_addr_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lorawan__dev_addr_response__free_unpacked
                     (Lorawan__DevAddrResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Lorawan__PrefixesRequest_Closure)
                 (const Lorawan__PrefixesRequest *message,
                  void *closure_data);
typedef void (*Lorawan__PrefixesResponse__PrefixMapping_Closure)
                 (const Lorawan__PrefixesResponse__PrefixMapping *message,
                  void *closure_data);
typedef void (*Lorawan__PrefixesResponse_Closure)
                 (const Lorawan__PrefixesResponse *message,
                  void *closure_data);
typedef void (*Lorawan__DevAddrRequest_Closure)
                 (const Lorawan__DevAddrRequest *message,
                  void *closure_data);
typedef void (*Lorawan__DevAddrResponse_Closure)
                 (const Lorawan__DevAddrResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Lorawan__DevAddrManager_Service Lorawan__DevAddrManager_Service;
struct _Lorawan__DevAddrManager_Service
{
  ProtobufCService base;
  void (*get_prefixes)(Lorawan__DevAddrManager_Service *service,
                       const Lorawan__PrefixesRequest *input,
                       Lorawan__PrefixesResponse_Closure closure,
                       void *closure_data);
  void (*get_dev_addr)(Lorawan__DevAddrManager_Service *service,
                       const Lorawan__DevAddrRequest *input,
                       Lorawan__DevAddrResponse_Closure closure,
                       void *closure_data);
};
typedef void (*Lorawan__DevAddrManager_ServiceDestroy)(Lorawan__DevAddrManager_Service *);
void lorawan__dev_addr_manager__init (Lorawan__DevAddrManager_Service *service,
                                      Lorawan__DevAddrManager_ServiceDestroy destroy);
#define LORAWAN__DEV_ADDR_MANAGER__BASE_INIT \
    { &lorawan__dev_addr_manager__descriptor, protobuf_c_service_invoke_internal, NULL }
#define LORAWAN__DEV_ADDR_MANAGER__INIT(function_prefix__) \
    { LORAWAN__DEV_ADDR_MANAGER__BASE_INIT,\
      function_prefix__ ## get_prefixes,\
      function_prefix__ ## get_dev_addr  }
void lorawan__dev_addr_manager__get_prefixes(ProtobufCService *service,
                                             const Lorawan__PrefixesRequest *input,
                                             Lorawan__PrefixesResponse_Closure closure,
                                             void *closure_data);
void lorawan__dev_addr_manager__get_dev_addr(ProtobufCService *service,
                                             const Lorawan__DevAddrRequest *input,
                                             Lorawan__DevAddrResponse_Closure closure,
                                             void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor lorawan__prefixes_request__descriptor;
extern const ProtobufCMessageDescriptor lorawan__prefixes_response__descriptor;
extern const ProtobufCMessageDescriptor lorawan__prefixes_response__prefix_mapping__descriptor;
extern const ProtobufCMessageDescriptor lorawan__dev_addr_request__descriptor;
extern const ProtobufCMessageDescriptor lorawan__dev_addr_response__descriptor;
extern const ProtobufCServiceDescriptor lorawan__dev_addr_manager__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fapi_2fprotocol_2florawan_2fdevice_5faddress_2eproto__INCLUDED */
