# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: github.com/TheThingsNetwork/api/broker/broker.proto for package 'broker'
# Original file comments:
# Copyright Â© 2017 The Things Network
# Use of this source code is governed by the MIT license that can be found in the LICENSE file.
#

require 'grpc'
require 'broker/broker_pb'

module Broker
  module Broker
    # The Broker service provides pure network functionality
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'broker.Broker'

      # Router initiates an Association with the Broker.
      rpc :Associate, stream(UplinkMessage), stream(DownlinkMessage)
      # Handler subscribes to uplink stream.
      rpc :Subscribe, SubscribeRequest, stream(DeduplicatedUplinkMessage)
      # Handler initiates downlink stream.
      rpc :Publish, stream(DownlinkMessage), Google::Protobuf::Empty
      # Router requests device activation
      rpc :Activate, DeviceActivationRequest, DeviceActivationResponse
    end

    Stub = Service.rpc_stub_class
  end
  module BrokerManager
    # The BrokerManager service provides configuration and monitoring functionality
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'broker.BrokerManager'

      # Handler announces a new application to Broker. This is a temporary method that will be removed
      # when we can push updates from the Discovery service to the routing services.
      rpc :RegisterApplicationHandler, ApplicationHandlerRegistration, Google::Protobuf::Empty
      # Network operator requests Broker status
      rpc :GetStatus, StatusRequest, Status
    end

    Stub = Service.rpc_stub_class
  end
end
