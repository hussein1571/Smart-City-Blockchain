"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.account = exports.data = exports.application = exports.services = exports.Discovery = exports.ApplicationClient = exports.wildcard = exports.DataClient = exports.key = exports.HandlerClient = undefined;

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _sourceMapSupport2 = require("source-map-support");

var _handler = require("./handler");

Object.defineProperty(exports, "HandlerClient", {
  enumerable: true,
  get: function get() {
    return _handler.HandlerClient;
  }
});

var _key = require("./utils/key");

Object.defineProperty(exports, "key", {
  enumerable: true,
  get: function get() {
    return _key.key;
  }
});

var _data = require("./data");

Object.defineProperty(exports, "DataClient", {
  enumerable: true,
  get: function get() {
    return _data.DataClient;
  }
});
Object.defineProperty(exports, "wildcard", {
  enumerable: true,
  get: function get() {
    return _data.wildcard;
  }
});

var _applications = require("./applications");

Object.defineProperty(exports, "ApplicationClient", {
  enumerable: true,
  get: function get() {
    return _applications.ApplicationClient;
  }
});

var _discovery = require("./discovery");

Object.defineProperty(exports, "Discovery", {
  enumerable: true,
  get: function get() {
    return _discovery.Discovery;
  }
});
Object.defineProperty(exports, "services", {
  enumerable: true,
  get: function get() {
    return _discovery.services;
  }
});

var _account = require("./account");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _sourceMapSupport2.install)(); // Copyright Â© 2017 The Things Network
// Use of this source code is governed by the MIT license that can be found in the LICENSE file.

/**
 * `open` creates and opens a HandlerClient for the application with the specified ID.
 *
 * @param appID - The ID of the application you want to manage.
 * @param tokenOrKey - The Access Token or Access Key used to authenticate.
 * @param opts - Optional options to pass to the Discovery client.
 */
var open = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(appID, accessKerOrToken, opts) {
    var handler;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            handler = new _handler.HandlerClient(appID, accessKerOrToken, opts);
            _context.next = 3;
            return handler.open();

          case 3:
            return _context.abrupt("return", handler);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function open(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

/**
 * `application` creates and opens an ApplicationClient for the application with the specified ID.
 *
 * @param appID - The ID of the application you want to manage
 * @param accessKeyOrToken - The Access Token or Access Key used to authenticate
 */
var application = exports.application = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(appID, accessKeyOrToken, opts) {
    var handler;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return open(appID, accessKeyOrToken, opts);

          case 2:
            handler = _context2.sent;
            return _context2.abrupt("return", handler.application());

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function application(_x4, _x5, _x6) {
    return _ref2.apply(this, arguments);
  };
}();

/**
 * `data` creates and opens an DataClient for the application with the specified ID.
 *
 * @param appID - The ID of the application you want to manage
 * @param accessKeyOrToken  - The Access Token or Access Key used to authenticate
 */
var data = exports.data = function () {
  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(appID, accessKeyOrToken, opts) {
    var handler;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return open(appID, accessKeyOrToken, opts);

          case 2:
            handler = _context3.sent;
            return _context3.abrupt("return", handler.data());

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function data(_x7, _x8, _x9) {
    return _ref3.apply(this, arguments);
  };
}();

/**
 * `account` creates an AccountClient for the user associated to the specified key or token.
 *
 * @param accessKeyOrToken  - The Access Token or Access Key used to authenticate
 * @param serverAddress  - The URL to the account server to use. Defaults to "https://account.thethingsnetwork.org"
 */
var account = exports.account = function account(accessKeyOrToken, serverAddress) {
  return new _account.AccountClient(accessKeyOrToken, serverAddress);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJIYW5kbGVyQ2xpZW50Iiwia2V5IiwiRGF0YUNsaWVudCIsIndpbGRjYXJkIiwiQXBwbGljYXRpb25DbGllbnQiLCJEaXNjb3ZlcnkiLCJzZXJ2aWNlcyIsIm9wZW4iLCJhcHBJRCIsImFjY2Vzc0tlck9yVG9rZW4iLCJvcHRzIiwiaGFuZGxlciIsImFwcGxpY2F0aW9uIiwiYWNjZXNzS2V5T3JUb2tlbiIsImRhdGEiLCJhY2NvdW50Iiwic2VydmVyQWRkcmVzcyIsIkFjY291bnRDbGllbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0E7Ozs7O29CQU1TQSxhOzs7Ozs7Ozs7Z0JBQ0FDLEc7Ozs7QUFKVDs7Ozs7aUJBS1NDLFU7Ozs7OztpQkFBWUMsUTs7OztBQU5yQjs7Ozs7eUJBT1NDLGlCOzs7Ozs7Ozs7c0JBQ0FDLFM7Ozs7OztzQkFBV0MsUTs7OztBQVRwQjs7OzttQ0FOQTtBQUNBOztBQWdCQTs7Ozs7OztBQU9BLElBQU1DO0FBQUEsc0ZBQU8saUJBQWdCQyxLQUFoQixFQUFnQ0MsZ0JBQWhDLEVBQTJEQyxJQUEzRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTEMsbUJBREssR0FDSyxJQUFJWCxzQkFBSixDQUFrQlEsS0FBbEIsRUFBeUJDLGdCQUF6QixFQUEyQ0MsSUFBM0MsQ0FETDtBQUFBO0FBQUEsbUJBRUxDLFFBQVFKLElBQVIsRUFGSzs7QUFBQTtBQUFBLDZDQUdKSSxPQUhJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQVA7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBTjs7QUFNQTs7Ozs7O0FBTU8sSUFBTUM7QUFBQSx1RkFBYyxrQkFBZ0JKLEtBQWhCLEVBQWdDSyxnQkFBaEMsRUFBMkRILElBQTNEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0hILEtBQUtDLEtBQUwsRUFBWUssZ0JBQVosRUFBOEJILElBQTlCLENBREc7O0FBQUE7QUFDbkJDLG1CQURtQjtBQUFBLDhDQUVsQkEsUUFBUUMsV0FBUixFQUZrQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFkOztBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQU47O0FBS1A7Ozs7OztBQU1PLElBQU1FO0FBQUEsdUZBQU8sa0JBQWdCTixLQUFoQixFQUFnQ0ssZ0JBQWhDLEVBQTJESCxJQUEzRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNJSCxLQUFLQyxLQUFMLEVBQVlLLGdCQUFaLEVBQThCSCxJQUE5QixDQURKOztBQUFBO0FBQ1pDLG1CQURZO0FBQUEsOENBRVhBLFFBQVFHLElBQVIsRUFGVzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFQOztBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQU47O0FBS1A7Ozs7OztBQU1PLElBQU1DLDRCQUFVLFNBQVZBLE9BQVUsQ0FBVUYsZ0JBQVYsRUFBcUNHLGFBQXJDLEVBQThFO0FBQ25HLFNBQU8sSUFBSUMsc0JBQUosQ0FBa0JKLGdCQUFsQixFQUFvQ0csYUFBcEMsQ0FBUDtBQUNELENBRk0iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgwqkgMjAxNyBUaGUgVGhpbmdzIE5ldHdvcmtcbi8vIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBNSVQgbGljZW5zZSB0aGF0IGNhbiBiZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlLlxuXG4vLyBAZmxvd1xuXG5pbXBvcnQgeyBIYW5kbGVyQ2xpZW50IH0gZnJvbSBcIi4vaGFuZGxlclwiXG5pbXBvcnQgeyBBY2NvdW50Q2xpZW50IH0gZnJvbSBcIi4vYWNjb3VudFwiXG5pbXBvcnQgeyBBcHBsaWNhdGlvbkNsaWVudCB9IGZyb20gXCIuL2FwcGxpY2F0aW9uc1wiXG5pbXBvcnQgeyBEYXRhQ2xpZW50IH0gZnJvbSBcIi4vZGF0YVwiXG5pbXBvcnQgdHlwZSB7IERpc2NvdmVyeU9wdGlvbnMgfSBmcm9tIFwiLi9kaXNjb3ZlcnlcIlxuXG5leHBvcnQgeyBIYW5kbGVyQ2xpZW50IH0gZnJvbSBcIi4vaGFuZGxlclwiXG5leHBvcnQgeyBrZXkgfSBmcm9tIFwiLi91dGlscy9rZXlcIlxuZXhwb3J0IHsgRGF0YUNsaWVudCwgd2lsZGNhcmQgfSBmcm9tIFwiLi9kYXRhXCJcbmV4cG9ydCB7IEFwcGxpY2F0aW9uQ2xpZW50IH0gZnJvbSBcIi4vYXBwbGljYXRpb25zXCJcbmV4cG9ydCB7IERpc2NvdmVyeSwgc2VydmljZXMgfSBmcm9tIFwiLi9kaXNjb3ZlcnlcIlxuXG4vKipcbiAqIGBvcGVuYCBjcmVhdGVzIGFuZCBvcGVucyBhIEhhbmRsZXJDbGllbnQgZm9yIHRoZSBhcHBsaWNhdGlvbiB3aXRoIHRoZSBzcGVjaWZpZWQgSUQuXG4gKlxuICogQHBhcmFtIGFwcElEIC0gVGhlIElEIG9mIHRoZSBhcHBsaWNhdGlvbiB5b3Ugd2FudCB0byBtYW5hZ2UuXG4gKiBAcGFyYW0gdG9rZW5PcktleSAtIFRoZSBBY2Nlc3MgVG9rZW4gb3IgQWNjZXNzIEtleSB1c2VkIHRvIGF1dGhlbnRpY2F0ZS5cbiAqIEBwYXJhbSBvcHRzIC0gT3B0aW9uYWwgb3B0aW9ucyB0byBwYXNzIHRvIHRoZSBEaXNjb3ZlcnkgY2xpZW50LlxuICovXG5jb25zdCBvcGVuID0gYXN5bmMgZnVuY3Rpb24gKGFwcElEIDogc3RyaW5nLCBhY2Nlc3NLZXJPclRva2VuIDogc3RyaW5nLCBvcHRzIDogP0Rpc2NvdmVyeU9wdGlvbnMpIDogUHJvbWlzZTxIYW5kbGVyQ2xpZW50PiB7XG4gIGNvbnN0IGhhbmRsZXIgPSBuZXcgSGFuZGxlckNsaWVudChhcHBJRCwgYWNjZXNzS2VyT3JUb2tlbiwgb3B0cylcbiAgYXdhaXQgaGFuZGxlci5vcGVuKClcbiAgcmV0dXJuIGhhbmRsZXJcbn1cblxuLyoqXG4gKiBgYXBwbGljYXRpb25gIGNyZWF0ZXMgYW5kIG9wZW5zIGFuIEFwcGxpY2F0aW9uQ2xpZW50IGZvciB0aGUgYXBwbGljYXRpb24gd2l0aCB0aGUgc3BlY2lmaWVkIElELlxuICpcbiAqIEBwYXJhbSBhcHBJRCAtIFRoZSBJRCBvZiB0aGUgYXBwbGljYXRpb24geW91IHdhbnQgdG8gbWFuYWdlXG4gKiBAcGFyYW0gYWNjZXNzS2V5T3JUb2tlbiAtIFRoZSBBY2Nlc3MgVG9rZW4gb3IgQWNjZXNzIEtleSB1c2VkIHRvIGF1dGhlbnRpY2F0ZVxuICovXG5leHBvcnQgY29uc3QgYXBwbGljYXRpb24gPSBhc3luYyBmdW5jdGlvbiAoYXBwSUQgOiBzdHJpbmcsIGFjY2Vzc0tleU9yVG9rZW4gOiBzdHJpbmcsIG9wdHMgOiA/RGlzY292ZXJ5T3B0aW9ucykgOiBQcm9taXNlPEFwcGxpY2F0aW9uQ2xpZW50PiB7XG4gIGNvbnN0IGhhbmRsZXIgPSBhd2FpdCBvcGVuKGFwcElELCBhY2Nlc3NLZXlPclRva2VuLCBvcHRzKVxuICByZXR1cm4gaGFuZGxlci5hcHBsaWNhdGlvbigpXG59XG5cbi8qKlxuICogYGRhdGFgIGNyZWF0ZXMgYW5kIG9wZW5zIGFuIERhdGFDbGllbnQgZm9yIHRoZSBhcHBsaWNhdGlvbiB3aXRoIHRoZSBzcGVjaWZpZWQgSUQuXG4gKlxuICogQHBhcmFtIGFwcElEIC0gVGhlIElEIG9mIHRoZSBhcHBsaWNhdGlvbiB5b3Ugd2FudCB0byBtYW5hZ2VcbiAqIEBwYXJhbSBhY2Nlc3NLZXlPclRva2VuICAtIFRoZSBBY2Nlc3MgVG9rZW4gb3IgQWNjZXNzIEtleSB1c2VkIHRvIGF1dGhlbnRpY2F0ZVxuICovXG5leHBvcnQgY29uc3QgZGF0YSA9IGFzeW5jIGZ1bmN0aW9uIChhcHBJRCA6IHN0cmluZywgYWNjZXNzS2V5T3JUb2tlbiA6IHN0cmluZywgb3B0cyA6ID9EaXNjb3ZlcnlPcHRpb25zKSA6IFByb21pc2U8RGF0YUNsaWVudD4ge1xuICBjb25zdCBoYW5kbGVyID0gYXdhaXQgb3BlbihhcHBJRCwgYWNjZXNzS2V5T3JUb2tlbiwgb3B0cylcbiAgcmV0dXJuIGhhbmRsZXIuZGF0YSgpXG59XG5cbi8qKlxuICogYGFjY291bnRgIGNyZWF0ZXMgYW4gQWNjb3VudENsaWVudCBmb3IgdGhlIHVzZXIgYXNzb2NpYXRlZCB0byB0aGUgc3BlY2lmaWVkIGtleSBvciB0b2tlbi5cbiAqXG4gKiBAcGFyYW0gYWNjZXNzS2V5T3JUb2tlbiAgLSBUaGUgQWNjZXNzIFRva2VuIG9yIEFjY2VzcyBLZXkgdXNlZCB0byBhdXRoZW50aWNhdGVcbiAqIEBwYXJhbSBzZXJ2ZXJBZGRyZXNzICAtIFRoZSBVUkwgdG8gdGhlIGFjY291bnQgc2VydmVyIHRvIHVzZS4gRGVmYXVsdHMgdG8gXCJodHRwczovL2FjY291bnQudGhldGhpbmdzbmV0d29yay5vcmdcIlxuICovXG5leHBvcnQgY29uc3QgYWNjb3VudCA9IGZ1bmN0aW9uIChhY2Nlc3NLZXlPclRva2VuIDogc3RyaW5nLCBzZXJ2ZXJBZGRyZXNzPyA6IHN0cmluZykgOiBBY2NvdW50Q2xpZW50IHtcbiAgcmV0dXJuIG5ldyBBY2NvdW50Q2xpZW50KGFjY2Vzc0tleU9yVG9rZW4sIHNlcnZlckFkZHJlc3MpXG59XG4iXX0=